app (
     app (
          app (
               fix (
                    abs (times:->(Nat,->(Nat,->(->(Nat,->(Nat,Nat)),Nat))). 
                         abs (m:Nat. 
                              abs (n:Nat.
                                   abs (plus:->(Nat,->(Nat,Nat)).
                                        if iszero(m) then 0
                                        else app (
                                                  app (plus, n),
     					                    app (
                                                       app (
                                                            app (times, pred(m)), 
                                                            n
                                                       ),
                                                       plus
                                                  )
                                             ) 
                                        fi
                                   )
     		               )
                         )
                    )
               ),
               succ (succ (0))
          ),
          succ (succ (succ (0)))
     ),
     fix (
          abs (plus:->(Nat,->(Nat,Nat)). 
               abs (m:Nat. 
                    abs (n:Nat. 
                         if iszero(m) then n 
                         else succ (app (app (plus, pred(m)), n))
                         fi
	               )
               )
          )
     )
)